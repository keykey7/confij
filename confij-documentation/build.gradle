apply plugin: 'base'
apply plugin: 'org.asciidoctor.convert'

dependencies {
	testImplementation project(':confij-yaml')
	testImplementation project(':confij-validation')
	testImplementation project(':confij-git')
}

asciidoctor {
	attributes 'revnumber': project.version.toString(),
			'group': project.group,
			'reproducible': 'true',
			'attribute-missing': 'warn'
	sources {
		include 'index.adoc'
	}

	// workound for https://github.com/asciidoctor/asciidoctor-gradle-plugin/issues/154
	ext.capturedOutput = [ ]
	def listener = { ext.capturedOutput << it } as StandardOutputListener
	doFirst {
		logging.addStandardErrorListener(listener)
		logging.addStandardOutputListener(listener)
	}
	doLast {
		logging.removeStandardOutputListener(listener)
		logging.removeStandardErrorListener(listener)
		ext.capturedOutput.join('').with { output ->
			if (output =~ /WARNING:|SEVERE:/ && !output.contains('illegal-access=warn')) {
				throw new GradleException("Warnings found in ${name}:\n" + output)
			}
		}
	}
}

tasks.assemble.dependsOn 'asciidoctor'

test {
	workingDir file('src/test/home')
}
